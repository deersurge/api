{"version":3,"sources":["../../src/controllers/authentication.js"],"names":["signup","req","res","next","body","email","password","firstName","lastName","status","send","error","User","findOne","err","existingUser","user","name","first","last","save","savedUser","json","success","token","generateToken","signin","comparedPassword","good","updateProfile","userId","_id","newProfile","phone","findByIdAndUpdate","new","then","sendStatus","catch"],"mappings":"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","file":"authentication.js","sourcesContent":["import token from '../services/token';\nimport User from '../models/user';\n\nexport default {\n    signup : (req, res, next) => {\n        const { email, password, firstName, lastName } = req.body;\n    \n        if (!email || !password) {\n            return res\n                .status(422)\n                .send({error: 'You must provide email and password.'});\n        }\n        User\n            .findOne({\n                email: email\n            }, function (err, existingUser) {\n                if (err) return res.status(422).send(err);\n                if (existingUser) {\n                    return res\n                        .status(422)\n                        .send({error: 'Email is in use'});\n                }\n                const user = new User({\n                    name: {\n                        first: firstName, \n                        last: lastName\n                    },\n                    email: email,\n                    password: password\n                })\n    \n                user.save(function (err, savedUser) {\n                    if (err) {\n                        return next(err)\n                    }\n    \n                    res.json({\n                        success: true,\n                        token: token.generateToken(savedUser)\n                    })\n                })\n            })\n    },\n    \n    signin: (req, res, next) => {\n        const email = req.body.email;\n        const password = req.body.password;\n        if (!email || !password) {\n            return res\n                .status(422)\n                .send({error: 'You must provide email and password.'});\n        }\n        User\n            .findOne({\n                email: email\n            }, function (err, existingUser) {\n                if (err || !existingUser) {\n                    return res.status(401).send(err || {error: \"User Not Found\"})\n                }\n                if (existingUser) {\n                    existingUser.comparedPassword(password, function(err, good) {\n                        if (err || !good) {\n                                return res.status(401).send(err || 'User not found')\n                            }\n    \n                            res.send({\n                                token: token.generateToken(existingUser)\n                            })\n                    })\n                }\n            })\n    },\n\n    updateProfile: (req, res, next) => {\n        req.user.comparedPassword(req.body.password, (err, good) => {\n            if (err || !good) return res.status(401).send(err || 'Incorrect Password')\n            const userId = req.user._id;\n            const newProfile = {\n                name: {\n                    first: req.body.firstName, \n                    last: req.body.lastName\n                }\n            };\n            delete newProfile.email;\n            delete newProfile.phone;\n            delete newProfile.password;\n            \n            User.findByIdAndUpdate(userId, newProfile, {new: true})\n            .then(newUser=>{\n                res.sendStatus(200);\n            })\n            .catch(next)\n        })\n    }\n    \n}\n"]}